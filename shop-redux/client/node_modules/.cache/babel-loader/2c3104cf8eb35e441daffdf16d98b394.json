{"ast":null,"code":"var _jsxFileName = \"/Users/yussefrafat/Desktop/STATETEST/shop-shop-shop-redux/client/src/components/CartItem/index.js\";\nimport React from 'react'; // commented out in favor of redux logic\n//import { useStoreContext } from '../../utils/GlobalState';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({\n  item\n}) => {\n  /*\n  Note that we only destructured the dispatch() \n  function from the useStoreContext Hook,\n  because the CartItem component has no \n  need to read state. \n  */\n  // commented out in favor of redux logic  \n  //const [, dispatch] = useStoreContext();\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${item.image}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, item.name, \", $\", item.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Qty:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"1\",\n    value: item.purchaseQuantity,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"trash\",\n    onClick: () => removeFromCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\"))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/yussefrafat/Desktop/STATETEST/shop-shop-shop-redux/client/src/components/CartItem/index.js"],"names":["React","useDispatch","useSelector","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","CartItem","item","state","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAGzB;AACN;AACA;AACA;AACA;AACA;AACI;AACA;AACA,QAAMC,KAAK,GAAGN,WAAW,CAAEM,KAAD,IAAW;AACnC,WAAOA,KAAP;AACD,GAFwB,CAAzB;AAGA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,cAAc,GAAGH,IAAI,IAAI;AAC7BE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,GAAG,EAAEL,IAAI,CAACK;AAFH,KAAD,CAAR;AAIAP,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGE;AAAL,KAAnB,CAAV;AACD,GAND;;AAQA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AAEA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjBN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAER,gBADC;AAEPS,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFH,OAAD,CAAR;AAKAP,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGE;AAAL,OAAnB,CAAV;AACD,KAPD,MAOO;AACLE,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP,oBADC;AAEPQ,QAAAA,GAAG,EAAEL,IAAI,CAACK,GAFH;AAGPK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHnB,OAAD,CAAR;AAMAV,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGE,IAAL;AAAWU,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AACD;AAEF,GApBD;;AAuBF,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,WAAUR,IAAI,CAACY,KAAM,EAD7B;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMZ,IAAI,CAACa,IAAX,SAAoBb,IAAI,CAACc,KAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,KAAK,EAAEd,IAAI,CAACU,gBAHd;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AACE,IAAA,IAAI,EAAC,KADP;AAEE,kBAAW,OAFb;AAGE,IAAA,OAAO,EAAE,MAAMH,cAAc,CAACH,IAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,CAFF,CAPF,CADF;AA6BD,CA5ED;;AA8EA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n// commented out in favor of redux logic\n//import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n\n      /*\n    Note that we only destructured the dispatch() \n    function from the useStoreContext Hook,\n    because the CartItem component has no \n    need to read state. \n    */\n    // commented out in favor of redux logic  \n    //const [, dispatch] = useStoreContext();\n    const state = useSelector((state) => {\n      return state\n    });\n    const dispatch = useDispatch();\n\n    const removeFromCart = item => {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n    };\n    \n    const onChange = (e) => {\n      const value = e.target.value;\n    \n      if (value === '0') {\n        dispatch({\n          type: REMOVE_FROM_CART,\n          _id: item._id\n        });\n      \n        idbPromise('cart', 'delete', { ...item });\n      } else {\n        dispatch({\n          type: UPDATE_CART_QUANTITY,\n          _id: item._id,\n          purchaseQuantity: parseInt(value)\n        });\n      \n        idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n      }\n\n    };\n\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            üóëÔ∏è\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}